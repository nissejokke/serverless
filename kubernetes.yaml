apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverless-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serverless
  template:
    metadata:
      labels:
        app: serverless
    spec:
      containers:
        - name: serverless-app
          image: serverless_client:latest
          imagePullPolicy: Never
          env:
          - name: CLIENT_CODE_URL
            value: https://raw.githubusercontent.com/nissejokke/serverless-functions/main/user-agent.ts
          - name: CLIENT_CODE
            value: |
              import { ServerRequest } from "https://deno.land/std@0.100.0/http/server.ts";

              export default async function handler(req: ServerRequest): Promise<void> {
                  const body = `Your user-agent is (${Deno.env.get('HOSTNAME')}):\n\n${req.headers.get(
                      "user-agent",
                    ) ?? "Unknown"}`;

                    req.respond({
                      body: body
                    });
              }
          
---

kind: Service
apiVersion: v1
metadata:
  name: serverless-service
spec:
  selector:
    app: serverless
  ports:
    - port: 1993 # Default port for image
  #type: LoadBalancer

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverless-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serverless-router
  template:
    metadata:
      labels:
        app: serverless-router
    spec:
      containers:
        - name: serverless-router
          image: serverless_router:latest
          imagePullPolicy: Never
          
---

kind: Service
apiVersion: v1
metadata:
  name: serverless-router
spec:
  selector:
    app: serverless-router
  ports:
    - port: 4000 # Default port for image
  #type: LoadBalancer

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: serverless-router
            port:
              number: 4000