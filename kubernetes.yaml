apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverless-router
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serverless-router
  template:
    metadata:
      labels:
        app: serverless-router
        role: manager
    spec:
      containers:
        - name: serverless-router
          image: nissejokke/serverless_router:latest
          resources:
            limits:
              cpu: 250m
            requests:
              cpu: 10m
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4000
              httpHeaders:
              - name: User-Agent
                value: Probe
            initialDelaySeconds: 3
            periodSeconds: 3
          startupProbe:
            httpGet:
              path: /healthz
              port: 4000
              httpHeaders:
              - name: User-Agent
                value: Probe
            failureThreshold: 30
            periodSeconds: 10
          
---

kind: Service
apiVersion: v1
metadata:
  name: serverless-router
spec:
  selector:
    app: serverless-router
  ports:
    - port: 4000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: serverless-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serverless-manager
  template:
    metadata:
      labels:
        app: serverless-manager
        role: manager
    spec:
      containers:
        - name: serverless-manager
          image: nissejokke/serverless_manager:latest
          resources:
            limits:
              cpu: 250m
            requests:
              cpu: 10m
          livenessProbe:
            httpGet:
              path: /healthz
              port: 4001
              httpHeaders:
              - name: User-Agent
                value: Probe
            initialDelaySeconds: 3
            periodSeconds: 3
          startupProbe:
            httpGet:
              path: /healthz
              port: 4001
              httpHeaders:
              - name: User-Agent
                value: Probe
            failureThreshold: 30
            periodSeconds: 10
          # envs set manually:
          # KUBE_CERTIFICATE_AUTH, KUBE_SERVER, KUBE_DOCTL_AUTH, DIGITALOCEAN_ACCESS_TOKEN, DB_PASSWORD
          
---

kind: Service
apiVersion: v1
metadata:
  name: serverless-manager
spec:
  selector:
    app: serverless-manager
  ports:
    - port: 4001

---

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: only-manager-can-call-clients-network-policy
  namespace: default
spec:
  podSelector:
    matchLabels:
      role: client
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          role: manager

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - http:
      paths:
      - path: /()(.*)
        pathType: Prefix
        backend:
          service:
            name: serverless-manager
            port:
              number: 4001
  - http:
      paths:
      - path: /fn(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: serverless-router
            port:
              number: 4000